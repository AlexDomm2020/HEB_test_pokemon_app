// Mocks generated by Mockito 5.4.0 from annotations
// in heb_test_pokemon_app/test/pokemonList/presentation/pokemon_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:heb_test_pokemon_app/pokemonList/data/pokemon_repository_impl.dart'
    as _i3;
import 'package:heb_test_pokemon_app/providers/http_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpService_0 extends _i1.SmartFake implements _i2.HttpService {
  _FakeHttpService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokemonRepositoryImplementation].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepositoryImplementation extends _i1.Mock
    implements _i3.PokemonRepositoryImplementation {
  MockPokemonRepositoryImplementation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HttpService get httpService => (super.noSuchMethod(
        Invocation.getter(#httpService),
        returnValue: _FakeHttpService_0(
          this,
          Invocation.getter(#httpService),
        ),
      ) as _i2.HttpService);
  @override
  set httpService(_i2.HttpService? _httpService) => super.noSuchMethod(
        Invocation.setter(
          #httpService,
          _httpService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<Map<String, dynamic>> getPokemons(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemons,
          [url],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}
